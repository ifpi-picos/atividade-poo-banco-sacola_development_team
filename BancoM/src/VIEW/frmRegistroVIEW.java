package VIEW;

import DAO.ClienteDAO;
import Entidades.Cliente;
import Entidades.Endereco;
import Entidades.Usuario;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.MaskFormatter;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.text.ParseException;
import java.util.Locale;

public class frmRegistroVIEW extends JDialog {

    private JTextField txtNome;
    private JFormattedTextField formattedTxtDataNascimento;
    private JFormattedTextField formattedTxtCpf;
    private JPasswordField txtSenha;
    private JButton btnRegistrar;
    private JButton btnCancelar;
    private JPanel registerPanel;
    private JTextField txtNovoUsuario;
    private JTextField txtBairro;
    private JTextField txtCidade;
    private JTextField txtUF;
    private JTextField txtLogradouro;
    private JFormattedTextField formattedTxtCep;
    private JPasswordField txtSenhaConfirma;
    private JTextField txtNumero;


    public frmRegistroVIEW(JFrame parent) {
        super(parent);

        dialogInit(); // Inicializa o diálogo
        formatarCampos(); // Formata os campos

        setTitle("Criar conta");
        setContentPane(registerPanel);
        setMinimumSize(new Dimension(480, 768));
        setModal(true);
        setLocationRelativeTo(parent);


        btnRegistrar.addActionListener(e -> registerUser());
        btnCancelar.addActionListener(e -> dispose());


    }

    // formata os campos de data, cpf e número
    private void formatarCampos() {
        try {
            MaskFormatter maskDataNascimento = new MaskFormatter("##/##/####");
            maskDataNascimento.install(formattedTxtDataNascimento);
        } catch (ParseException e) {
            throw new RuntimeException(e);
        }
        try {
            MaskFormatter maskCPF = new MaskFormatter("###.###.###-##");
            maskCPF.install(formattedTxtCpf);
        } catch (ParseException e) {
            throw new RuntimeException(e);
        }
        try {
            MaskFormatter cep = new MaskFormatter("#####-###");
            cep.install(formattedTxtCep);
        } catch (ParseException e) {
            throw new RuntimeException(e);
        }


    }

    // Registra o usuário
    private void registerUser() {
        // Pegando dados gerais do cliente.
        String name = txtNome.getText();
        String cpf = formattedTxtCpf.getText();
        String birthDate = formattedTxtDataNascimento.getText();


        // Pegando dados do endereço
        String street = txtLogradouro.getText();
        String number = txtNumero.getText();
        String cep = formattedTxtCep.getText();
        String neighborhood = txtBairro.getText();
        String city = txtCidade.getText();
        String uf = txtUF.getText();

        // Pegando dados do usuário
        String username = txtNovoUsuario.getText();
        String password = String.valueOf(txtSenha.getPassword());
        String confirmPassword = String.valueOf(txtSenhaConfirma.getPassword());

        // Abrindo conta padrão para o cliente.

        if (name.isEmpty() || cpf.isEmpty() || birthDate.isEmpty() || street.isEmpty() || number.isEmpty() || cep.isEmpty() || neighborhood.isEmpty() || city.isEmpty() || uf.isEmpty() || username.isEmpty() || password.isEmpty() || confirmPassword.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Preencha todos os campos!");
        }
        if (!password.equals(confirmPassword)) {
            JOptionPane.showMessageDialog(this, "As senhas não conferem!");
            return;
        }
        int numberInt = Integer.parseInt(number);
        Endereco endereco = new Endereco(numberInt, cep, street, neighborhood, city, uf);
        Usuario usuario = new Usuario();
        usuario.setNomeUsuario(username);
        usuario.setSenhaUsuario(password);


        Cliente cliente = new Cliente();
        cliente.setNomeClient(name);
        cliente.setCpfCliente(cpf);
        cliente.setDataNascimentoCliente(birthDate);
        cliente.setEnderecoCliente(endereco);
        cliente.setUsuarioCliente(usuario);


        ClienteDAO clienteDAO = new ClienteDAO();
        clienteDAO.cadastrarCliente(cliente);

        // Fecha o diálogo

        // Faz o dispose() caso o cliente seja cadastrado com sucesso.
        if (clienteDAO.checagemDeSucesso == 1) {
            JOptionPane.showMessageDialog(this, "Cliente cadastrado com sucesso!");
            dispose();
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao cadastrar cliente!");
        }
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        registerPanel = new JPanel();
        registerPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(17, 7, new Insets(20, 20, 20, 20), 10, 10));
        final JLabel label1 = new JLabel();
        Font label1Font = this.$$$getFont$$$("Unispace", Font.BOLD, 18, label1.getFont());
        if (label1Font != null) label1.setFont(label1Font);
        label1.setText("Registre-se");
        registerPanel.add(label1, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 7, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        Font label2Font = this.$$$getFont$$$("Unispace", Font.BOLD, 18, label2.getFont());
        if (label2Font != null) label2.setFont(label2Font);
        label2.setText("Nome:");
        registerPanel.add(label2, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 3, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        txtNome = new JTextField();
        Font txtNomeFont = this.$$$getFont$$$("Unispace", Font.BOLD, 18, txtNome.getFont());
        if (txtNomeFont != null) txtNome.setFont(txtNomeFont);
        registerPanel.add(txtNome, new com.intellij.uiDesigner.core.GridConstraints(1, 5, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final JLabel label3 = new JLabel();
        Font label3Font = this.$$$getFont$$$("Unispace", Font.BOLD, 18, label3.getFont());
        if (label3Font != null) label3.setFont(label3Font);
        label3.setText("CPF:");
        registerPanel.add(label3, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 3, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label4 = new JLabel();
        Font label4Font = this.$$$getFont$$$("Unispace", Font.BOLD, 18, label4.getFont());
        if (label4Font != null) label4.setFont(label4Font);
        label4.setText("Data de Nascimento:");
        registerPanel.add(label4, new com.intellij.uiDesigner.core.GridConstraints(3, 0, 1, 3, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label5 = new JLabel();
        Font label5Font = this.$$$getFont$$$("Unispace", Font.BOLD, 18, label5.getFont());
        if (label5Font != null) label5.setFont(label5Font);
        label5.setText("Nova senha:");
        registerPanel.add(label5, new com.intellij.uiDesigner.core.GridConstraints(14, 0, 1, 5, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label6 = new JLabel();
        Font label6Font = this.$$$getFont$$$("Unispace", Font.BOLD, 18, label6.getFont());
        if (label6Font != null) label6.setFont(label6Font);
        label6.setText("Confirme sua senha:");
        registerPanel.add(label6, new com.intellij.uiDesigner.core.GridConstraints(15, 0, 1, 5, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        btnRegistrar = new JButton();
        Font btnRegistrarFont = this.$$$getFont$$$("Unispace", Font.BOLD, 18, btnRegistrar.getFont());
        if (btnRegistrarFont != null) btnRegistrar.setFont(btnRegistrarFont);
        btnRegistrar.setText("Registrar");
        registerPanel.add(btnRegistrar, new com.intellij.uiDesigner.core.GridConstraints(16, 0, 1, 5, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        btnCancelar = new JButton();
        Font btnCancelarFont = this.$$$getFont$$$("Unispace", Font.BOLD, 18, btnCancelar.getFont());
        if (btnCancelarFont != null) btnCancelar.setFont(btnCancelarFont);
        btnCancelar.setText("Cancelar");
        registerPanel.add(btnCancelar, new com.intellij.uiDesigner.core.GridConstraints(16, 6, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final com.intellij.uiDesigner.core.Spacer spacer1 = new com.intellij.uiDesigner.core.Spacer();
        registerPanel.add(spacer1, new com.intellij.uiDesigner.core.GridConstraints(16, 5, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, 1, new Dimension(20, 10), new Dimension(20, 20), new Dimension(20, 20), 0, false));
        final JLabel label7 = new JLabel();
        Font label7Font = this.$$$getFont$$$("Unispace", Font.BOLD, 18, label7.getFont());
        if (label7Font != null) label7.setFont(label7Font);
        label7.setText("Usuário:");
        registerPanel.add(label7, new com.intellij.uiDesigner.core.GridConstraints(13, 0, 1, 5, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        txtNovoUsuario = new JTextField();
        Font txtNovoUsuarioFont = this.$$$getFont$$$("Unispace", Font.BOLD, 18, txtNovoUsuario.getFont());
        if (txtNovoUsuarioFont != null) txtNovoUsuario.setFont(txtNovoUsuarioFont);
        registerPanel.add(txtNovoUsuario, new com.intellij.uiDesigner.core.GridConstraints(13, 5, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final JLabel label8 = new JLabel();
        Font label8Font = this.$$$getFont$$$("Unispace", Font.BOLD, 18, label8.getFont());
        if (label8Font != null) label8.setFont(label8Font);
        label8.setText("Rua:");
        registerPanel.add(label8, new com.intellij.uiDesigner.core.GridConstraints(5, 0, 1, 5, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label9 = new JLabel();
        label9.setEnabled(true);
        Font label9Font = this.$$$getFont$$$("Unispace", Font.BOLD, 18, label9.getFont());
        if (label9Font != null) label9.setFont(label9Font);
        label9.setText("CEP:");
        registerPanel.add(label9, new com.intellij.uiDesigner.core.GridConstraints(7, 0, 3, 5, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label10 = new JLabel();
        label10.setEnabled(true);
        Font label10Font = this.$$$getFont$$$("Unispace", Font.BOLD, 18, label10.getFont());
        if (label10Font != null) label10.setFont(label10Font);
        label10.setText("Bairro:");
        registerPanel.add(label10, new com.intellij.uiDesigner.core.GridConstraints(10, 0, 1, 5, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label11 = new JLabel();
        label11.setEnabled(true);
        Font label11Font = this.$$$getFont$$$("Unispace", Font.BOLD, 18, label11.getFont());
        if (label11Font != null) label11.setFont(label11Font);
        label11.setText("Cidade:");
        registerPanel.add(label11, new com.intellij.uiDesigner.core.GridConstraints(11, 0, 1, 5, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label12 = new JLabel();
        label12.setEnabled(true);
        Font label12Font = this.$$$getFont$$$("Unispace", Font.BOLD, 18, label12.getFont());
        if (label12Font != null) label12.setFont(label12Font);
        label12.setText("Estado:");
        registerPanel.add(label12, new com.intellij.uiDesigner.core.GridConstraints(12, 0, 1, 4, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        txtBairro = new JTextField();
        txtBairro.setEnabled(true);
        Font txtBairroFont = this.$$$getFont$$$("Unispace", Font.BOLD, 18, txtBairro.getFont());
        if (txtBairroFont != null) txtBairro.setFont(txtBairroFont);
        txtBairro.setText("");
        registerPanel.add(txtBairro, new com.intellij.uiDesigner.core.GridConstraints(10, 5, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(100, 20), null, 0, false));
        txtCidade = new JTextField();
        txtCidade.setEnabled(true);
        Font txtCidadeFont = this.$$$getFont$$$("Unispace", Font.BOLD, 18, txtCidade.getFont());
        if (txtCidadeFont != null) txtCidade.setFont(txtCidadeFont);
        txtCidade.setText("");
        registerPanel.add(txtCidade, new com.intellij.uiDesigner.core.GridConstraints(11, 5, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(100, 20), null, 0, false));
        txtUF = new JTextField();
        txtUF.setEnabled(true);
        Font txtUFFont = this.$$$getFont$$$("Unispace", Font.BOLD, 18, txtUF.getFont());
        if (txtUFFont != null) txtUF.setFont(txtUFFont);
        txtUF.setText("");
        registerPanel.add(txtUF, new com.intellij.uiDesigner.core.GridConstraints(12, 5, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(100, 20), null, 0, false));
        txtLogradouro = new JTextField();
        Font txtLogradouroFont = this.$$$getFont$$$("Unispace", Font.BOLD, 16, txtLogradouro.getFont());
        if (txtLogradouroFont != null) txtLogradouro.setFont(txtLogradouroFont);
        registerPanel.add(txtLogradouro, new com.intellij.uiDesigner.core.GridConstraints(5, 5, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final JLabel label13 = new JLabel();
        Font label13Font = this.$$$getFont$$$("Unispace", Font.BOLD, 18, label13.getFont());
        if (label13Font != null) label13.setFont(label13Font);
        label13.setText("Endereço");
        registerPanel.add(label13, new com.intellij.uiDesigner.core.GridConstraints(4, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        formattedTxtDataNascimento = new JFormattedTextField();
        Font formattedTxtDataNascimentoFont = this.$$$getFont$$$("Unispace", Font.BOLD, 18, formattedTxtDataNascimento.getFont());
        if (formattedTxtDataNascimentoFont != null) formattedTxtDataNascimento.setFont(formattedTxtDataNascimentoFont);
        registerPanel.add(formattedTxtDataNascimento, new com.intellij.uiDesigner.core.GridConstraints(3, 5, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        formattedTxtCpf = new JFormattedTextField();
        Font formattedTxtCpfFont = this.$$$getFont$$$("Unispace", Font.BOLD, 18, formattedTxtCpf.getFont());
        if (formattedTxtCpfFont != null) formattedTxtCpf.setFont(formattedTxtCpfFont);
        formattedTxtCpf.setText("");
        registerPanel.add(formattedTxtCpf, new com.intellij.uiDesigner.core.GridConstraints(2, 5, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        formattedTxtCep = new JFormattedTextField();
        formattedTxtCep.setEnabled(true);
        Font formattedTxtCepFont = this.$$$getFont$$$("Unispace", Font.BOLD, 18, formattedTxtCep.getFont());
        if (formattedTxtCepFont != null) formattedTxtCep.setFont(formattedTxtCepFont);
        formattedTxtCep.setText("");
        registerPanel.add(formattedTxtCep, new com.intellij.uiDesigner.core.GridConstraints(7, 5, 3, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        txtSenha = new JPasswordField();
        Font txtSenhaFont = this.$$$getFont$$$("Unispace", Font.BOLD, 18, txtSenha.getFont());
        if (txtSenhaFont != null) txtSenha.setFont(txtSenhaFont);
        registerPanel.add(txtSenha, new com.intellij.uiDesigner.core.GridConstraints(14, 5, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        txtSenhaConfirma = new JPasswordField();
        Font txtSenhaConfirmaFont = this.$$$getFont$$$("Unispace", Font.BOLD, 18, txtSenhaConfirma.getFont());
        if (txtSenhaConfirmaFont != null) txtSenhaConfirma.setFont(txtSenhaConfirmaFont);
        registerPanel.add(txtSenhaConfirma, new com.intellij.uiDesigner.core.GridConstraints(15, 5, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final JLabel label14 = new JLabel();
        Font label14Font = this.$$$getFont$$$("Unispace", Font.BOLD, 18, label14.getFont());
        if (label14Font != null) label14.setFont(label14Font);
        label14.setText("Número:");
        registerPanel.add(label14, new com.intellij.uiDesigner.core.GridConstraints(6, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        txtNumero = new JTextField();
        Font txtNumeroFont = this.$$$getFont$$$("Unispace", Font.BOLD, 18, txtNumero.getFont());
        if (txtNumeroFont != null) txtNumero.setFont(txtNumeroFont);
        registerPanel.add(txtNumero, new com.intellij.uiDesigner.core.GridConstraints(6, 5, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return registerPanel;
    }
}
